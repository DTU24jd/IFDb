{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/38598/Downloads/IFDB2-main/IFDB2-main/src/app/page.tsx"],"sourcesContent":["/*\n  Početna stranica s infinite scrollom i filtriranjem po žanrovima.\n  Zašto: Infinite scroll omogućuje bolji UX za pregledavanje velikog broja serija bez reloadanja stranice.\n  Kako: Serije se dohvaćaju paginirano s TVmaze API-ja, a filtriranje po žanrovima koristi useSearchParams i filter funkciju nad dohvaćenim podacima.\n*/\n'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport Link from 'next/link';\nimport { useSearchParams } from 'next/navigation';\nimport './globals.css';\n\n\n// Tip za podatke o seriji (TVmaze API)\ntype Show = {\n  id: number;\n  name: string;\n  image?: {\n    medium: string;\n    original: string;\n  };\n  rating?: {\n    average: number;\n  };\n  genres?: string[];\n};\n\nconst PAGE_SIZE = 20;\nconst MAX_PAGES = 5; // TVmaze demo ograničenje\n\nexport default function HomePage() {\n  const [shows, setShows] = useState<Show[]>([]);\n  const [page, setPage] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const searchParams = useSearchParams();\n\n  // Dodajemo ref za kontrolu inicijalizacije\n  const initialized = useRef(false);\n\n  // useEffect koristi se za dohvat podataka s API-ja kad se promijeni stranica (page).\n  // Zašto: useEffect je potreban za side-effect (fetch) kad se promijeni page.\n  useEffect(() => {\n    if (initialized.current) return;\n    initialized.current = true;\n    if (page >= MAX_PAGES) return setHasMore(false);\n    setLoading(true);\n    fetch(`https://api.tvmaze.com/shows?page=${page}`)\n      .then(res => res.json())\n      .then((data: Show[]) => {\n        setShows(prev => [...prev, ...data]);\n        setHasMore(data.length > 0 && page < MAX_PAGES - 1);\n        setLoading(false);\n      });\n  }, [page]);\n\n  // Filtriranje po žanrovima\n  // Kako: Ako postoji genres parametar, filtriramo serije tako da svaka mora sadržavati sve odabrane žanrove.\n  let filtered = shows;\n  const genresParam = searchParams.get('genres');\n  if (genresParam) {\n    const selected = genresParam.split(',');\n    filtered = shows.filter(s => s.genres && selected.every(g => s.genres!.includes(g)));\n  }\n\n  // Infinite scroll: učitaj više kad korisnik dođe do dna\n  // Zašto: useEffect sluša scroll event i povećava page kad korisnik dođe do dna.\n  useEffect(() => {\n    const handleScroll = () => {\n      if (!hasMore || loading) return;\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 200) {\n        setPage(p => p + 1);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [hasMore, loading]);\n\n  return (\n    <main className=\"p-4\">\n      <h1 className=\"text-4xl font-bold mb-6 mt-8 text-center\">Popularne TV serije</h1>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n        {/* Svaki red prikazuje više serija */}\n        {filtered.map((show) => (\n          <Link key={show.id} href={`/shows/${show.id}`}>\n            <div className=\"show-card cursor-pointer mb-2 hover:shadow-lg transition\">\n              <img\n                src={show.image?.medium || \"/file.svg\"}\n                alt={show.name}\n                className=\"show-img\"\n                width={210}\n                height={295}\n              />\n              <div className=\"show-info\">\n                <h2 className=\"show-title\">{show.name}</h2>\n                <p className=\"show-rating\">⭐ {show.rating?.average ?? \"N/A\"}</p>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n      {loading && <div className=\"text-center my-4\">Učitavanje...</div>}\n      {!hasMore && <div className=\"text-center my-4 text-gray-500\">Nema više serija za prikaz.</div>}\n      <div className=\"text-center my-4\">\n        <Link href=\"/signin\" className=\"inline-block bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded shadow transition mr-4\">\n          Prijava s računom\n        </Link>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}